/*************************************************************************************************/
Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9
to
     4
   /   \
  7     2
 / \   / \
9   6 3   1
/*************************************************************************************************/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void getInvertTree(TreeNode* root) 
    {
        	if(root==NULL)
			return ;
		if(root->left==NULL && root->right==NULL)
			return ;
		TreeNode* temp=root->left;
		root->left=root->right;
		root->right=temp;
		
		if(root->left)
			getInvertTree(root->left);
		if(root->right)
			getInvertTree(root->right);
    }
    TreeNode* invertTree(TreeNode* root) {
       getInvertTree(root);
	   return root;
    }
};
