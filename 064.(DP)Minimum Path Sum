/***************************************************************************************/
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom 
right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
/***************************************************************************************/

class Solution
{
	public:
	int minPathSum(vector<vector<int>> &grid)
	{
		if(grid.size()==0 || grid[0].size()==0)
			return 0;
		vector<int> res(grid[0].size());
		res[0]=grid[0][0];
		
		
		for(int j=1; j<grid[0].size(); j++)
			res[j]=res[j-1]+grid[0][j];
			
		for(int i=1; i<grid.size(); i++)
		{
			for(int j=0; j<grid[0].size(); j++)
			{
				if(j==0)
					res[0]=res[0]+grid[i][0];
				else
					res[j]=min(res[j-1],res[j])+grid[i][j];
			}
		}
		return res[grid[0].size()-1];
	}
};
