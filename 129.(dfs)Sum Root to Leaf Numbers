/*************************************************************************************************/
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers.

For example,

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = 12 + 13 = 25.
/*************************************************************************************************/

class Solution {
public:
    void dfs(TreeNode *root, int tmp, int &sum)
	{
		if(root==NULL)
			return ;
		if(!root->left && !root->right)
			sum+=tmp*10+root->val;
		dfs(root->left, tmp*10+root->val, sum);
		dfs(root->right, tmp*10+root->val, sum);
	}

    int sumNumbers(TreeNode* root) {
        int tmp=0 ,sum=0;
		dfs(root, tmp, sum);
		return sum;
    }
};
