class Solution {
	public:
    	int search(vector<int>& nums, int target) {
        	int i=0, mid, left, right;
		int flag=0, index=-1;
		if(nums.size()==0)
            		return -1;
		int length=nums.size();
		while(nums[i+1]>nums[i])
		{
			if(i==length-1)
				break;
			i++;
		}

        	cout<<"i="<<i<<endl;
		left=0;
		right=i;
		while(left<=right)
		{
			mid=((left+right)/2);
			if(target==nums[mid])
			{
				index= mid;
				flag=1;
				break;
			}
			else if(nums[mid]>target)
				right=mid-1;
			else if(nums[mid]<target)
				left=mid+1;
		}
		if(!flag)
		{
			left=i+1;
			right=length-1;
			while(left<=right)
			{
				mid=((left+right)/2);
				if(target==nums[mid])
				{
					index= mid;;

					break;
				}
				else if(nums[mid]>target)
					right=mid-1;
				else if(nums[mid]<target)
					left=mid+1;
			}
		}

		return index;

    }
};
