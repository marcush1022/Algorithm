/*********************************************************************************/
Reverse a singly linked list.
/*********************************************************************************/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL || head->next==NULL)
            return head;
        ListNode *pre=head, *p=head->next;
        ListNode *pNext;
        pre->next=NULL;
        while(p)
        {
            pNext=p->next;
            p->next=pre;
            pre=p;
            p=pNext;
        }
        return pre;
    }
};
