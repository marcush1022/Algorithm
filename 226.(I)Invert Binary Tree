/*********************************************************************************/
Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9
to
     4
   /   \
  7     2
 / \   / \
9   6 3   1
/**********************************************************************************/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
       stack<TreeNode*> stk;
	   stk.push(root);
	   while(!stk.empty())
	   {
		   TreeNode* p=stk.top();
		   stk.pop();
		   if(p)
		   {
			   stk.push(p->left);
			   stk.push(p->right);
			   swap(p->left, p->right);
		   }
	   }
	   
	   return root;
    }
};
