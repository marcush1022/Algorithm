#include <iostream>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <deque>
#include <vector>
#include <queue>
#include <string>
#include <cstring>
#include <map>
#include <stack>
#include <set>
using namespace std;

struct ListNode{
	int val;
	ListNode *next;
	ListNode(int x) :val(x), next(NULL) {}
};

ListNode *InitNode(ListNode *l, int val)
{
		l->val=val;
		l->next=new ListNode(0);
		return l->next;
}

class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
			ListNode *ret=new ListNode(0);
			ListNode *cur=ret;
			int sum=0;
			while(1)
			{
				if(l1!=NULL)
				{
					sum+=l1->val;
					l1=l1->next;
				}
				if(l2!=NULL)
				{
					sum+=l2->val;
					l2=l2->next;
				}
				cur->val=sum%10;
				sum/=10;
				if(l1!=NULL || l2!=NULL || sum)
					cur=(cur->next=new ListNode(0));
				else
					break;
			}
			return ret;
    }
};

int main()
{
	int val, n;
	Solution s;
	ListNode *a=new ListNode(0), *b=new ListNode(0);
    ListNode *pa=a, *pb=b;
    ListNode *pc;
	cin>>n;
	for(int i=n;i;i--)
	{
		cin>>val;
		pa=InitNode(pa, val);
	}
	for(int j=n;j;j--)
	{
		cin>>val;
		pb=InitNode(pb, val);
	}
	pc=s.addTwoNumbers(pa,pb);
	while(n)
    {
        cout<<pc->val;
        n--;
    }
	return 0;
}
