/***************************************************************************/
Given a non-negative integer num, repeatedly add all its digits until the 
result has only one digit.

For example:

Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only 
one digit, return it.

Follow up:
Could you do it without any loop/recursion in O(1) runtime?
/***************************************************************************/

I. Hash set:
class Solution1
{
	public:
	int addDigits(int n)
	{
		unordered_set<int> set;
		int tmp=0;
		
		while(set.find(n)==set.end())
		{
			tmp=0;
			while(n)
			{
				tmp+=n%10;
				n=n/10;
			}
			n=tmp;
			if(n/10==0)
				return n;
		}
		return -1;
	}
};

/***************************************************************************/
II. Math, smarter:
class Solution {
public:
    int addDigits(int num) {
        if(num%9 == 0 && num!=0)
        return 9;
        return (num%9);
    }
};
