/**********************************************************************************************************/
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
/**********************************************************************************************************/

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int len=nums.size();
		vector<int> ret;
		if(len==0)
			return ret;
		int left=0, right=len-1;
		
		vector<int> sorted(nums);
		std::sort(sorted.begin(), sorted.end());
		
		while(left<right)
		{
			int sum=sorted[left]+sorted[right];
			if(sum==target)
			{
				for(int i=0; i<len; i++)
				{    
				    if(nums[i]==sorted[left])
				        ret.push_back(i);
				    else if(nums[i]==sorted[right])
				        ret.push_back(i);
				    if(ret.size()==2)
				        return ret;
				} 
			}
			else if(sum<target)
				left++;
			else
				right--;
		}
		return ret;
    }
};
