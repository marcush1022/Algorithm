/********************************************************************************************************/
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
Find all unique triplets in the array which gives the sum of zero.
/********************************************************************************************************/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int len=nums.size();
		vector<vector<int>> ret;
		if(len==0)
			return ret;
		
		std::sort(nums.begin(), nums.end());
		
		int target=0;
		for(int i=0; i<len-2; i++)
		{
			
			int left=i+1;
			int right=len-1;
			while(left<right)
			{
				int sum=nums[i]+nums[left]+nums[right];
				if(sum<target)
					left++;
				else if(sum>target)
					right--;
				else
				{
					ret.push_back({nums[i], nums[left], nums[right]});
					left++;
					right--;
					while(nums[left]==nums[left-1] && left<right)
						left++;
					while(nums[right]==nums[right+1] && left<right)
						right++;
				}
			}
			while(nums[i]==nums[i+1] && i<len-2)
				i++;
		}
		return ret;
    }
};
